circuit Ex :
  module Ex :
    output io : { flip exInfo : { oprand1 : UInt<64>, oprand2 : UInt<64>, rd : UInt<5>, wreg : UInt<1>, opcode : UInt<7>, aluop : UInt<5>}, flip exForwarding : { flip addr : UInt<5>, flip data : UInt<64>}, flip writeRfOp : { flip en : UInt<1>, flip data : UInt<64>, flip addr : UInt<5>}}

    node _aluRes_T = add(io.exInfo.oprand1, io.exInfo.oprand2) @[Ex.scala 19:26]
    node _aluRes_T_1 = tail(_aluRes_T, 1) @[Ex.scala 19:26]
    node _aluRes_T_2 = sub(io.exInfo.oprand1, io.exInfo.oprand2) @[Ex.scala 20:26]
    node _aluRes_T_3 = tail(_aluRes_T_2, 1) @[Ex.scala 20:26]
    node _aluRes_T_4 = asSInt(io.exInfo.oprand1) @[Ex.scala 21:29]
    node _aluRes_T_5 = asSInt(io.exInfo.oprand2) @[Ex.scala 21:46]
    node _aluRes_T_6 = lt(_aluRes_T_4, _aluRes_T_5) @[Ex.scala 21:36]
    node _aluRes_T_7 = mux(_aluRes_T_6, UInt<1>("h1"), UInt<1>("h0")) @[Ex.scala 21:20]
    node _aluRes_T_8 = lt(io.exInfo.oprand1, io.exInfo.oprand2) @[Ex.scala 22:29]
    node _aluRes_T_9 = mux(_aluRes_T_8, UInt<1>("h1"), UInt<1>("h0")) @[Ex.scala 22:20]
    node _aluRes_T_10 = xor(io.exInfo.oprand1, io.exInfo.oprand2) @[Ex.scala 23:26]
    node _aluRes_T_11 = or(io.exInfo.oprand1, io.exInfo.oprand2) @[Ex.scala 24:26]
    node _aluRes_T_12 = and(io.exInfo.oprand1, io.exInfo.oprand2) @[Ex.scala 25:26]
    node _aluRes_T_13 = bits(io.exInfo.oprand2, 4, 0) @[Ex.scala 26:36]
    node _aluRes_T_14 = dshl(io.exInfo.oprand1, _aluRes_T_13) @[Ex.scala 26:26]
    node _aluRes_T_15 = bits(io.exInfo.oprand2, 4, 0) @[Ex.scala 27:36]
    node _aluRes_T_16 = dshr(io.exInfo.oprand1, _aluRes_T_15) @[Ex.scala 27:26]
    node _aluRes_T_17 = asSInt(io.exInfo.oprand1) @[Ex.scala 28:26]
    node _aluRes_T_18 = bits(io.exInfo.oprand2, 4, 0) @[Ex.scala 28:43]
    node _aluRes_T_19 = dshr(_aluRes_T_17, _aluRes_T_18) @[Ex.scala 28:33]
    node _aluRes_T_20 = asUInt(_aluRes_T_19) @[Ex.scala 28:50]
    node _aluRes_T_21 = eq(UInt<5>("h0"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_22 = mux(_aluRes_T_21, _aluRes_T_1, UInt<1>("h0")) @[Mux.scala 81:58]
    node _aluRes_T_23 = eq(UInt<5>("h1"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_24 = mux(_aluRes_T_23, _aluRes_T_3, _aluRes_T_22) @[Mux.scala 81:58]
    node _aluRes_T_25 = eq(UInt<5>("h2"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_26 = mux(_aluRes_T_25, _aluRes_T_7, _aluRes_T_24) @[Mux.scala 81:58]
    node _aluRes_T_27 = eq(UInt<5>("h3"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_28 = mux(_aluRes_T_27, _aluRes_T_9, _aluRes_T_26) @[Mux.scala 81:58]
    node _aluRes_T_29 = eq(UInt<5>("h4"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_30 = mux(_aluRes_T_29, _aluRes_T_10, _aluRes_T_28) @[Mux.scala 81:58]
    node _aluRes_T_31 = eq(UInt<5>("h5"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_32 = mux(_aluRes_T_31, _aluRes_T_11, _aluRes_T_30) @[Mux.scala 81:58]
    node _aluRes_T_33 = eq(UInt<5>("h6"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_34 = mux(_aluRes_T_33, _aluRes_T_12, _aluRes_T_32) @[Mux.scala 81:58]
    node _aluRes_T_35 = eq(UInt<5>("h7"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_36 = mux(_aluRes_T_35, _aluRes_T_14, _aluRes_T_34) @[Mux.scala 81:58]
    node _aluRes_T_37 = eq(UInt<5>("h8"), io.exInfo.aluop) @[Mux.scala 81:61]
    node _aluRes_T_38 = mux(_aluRes_T_37, _aluRes_T_16, _aluRes_T_36) @[Mux.scala 81:58]
    node _aluRes_T_39 = eq(UInt<5>("h9"), io.exInfo.aluop) @[Mux.scala 81:61]
    node aluRes = mux(_aluRes_T_39, _aluRes_T_20, _aluRes_T_38) @[Mux.scala 81:58]
    wire _io_writeRfOp_WIRE : { flip en : UInt<1>, flip data : UInt<64>, flip addr : UInt<5>} @[Ex.scala 33:36]
    _io_writeRfOp_WIRE.addr <= UInt<5>("h0") @[Ex.scala 33:36]
    _io_writeRfOp_WIRE.data <= UInt<64>("h0") @[Ex.scala 33:36]
    _io_writeRfOp_WIRE.en <= UInt<1>("h0") @[Ex.scala 33:36]
    io.writeRfOp.addr <= _io_writeRfOp_WIRE.addr @[Ex.scala 33:21]
    io.writeRfOp.data <= _io_writeRfOp_WIRE.data @[Ex.scala 33:21]
    io.writeRfOp.en <= _io_writeRfOp_WIRE.en @[Ex.scala 33:21]
    node _T = eq(UInt<6>("h33"), io.exInfo.opcode) @[Ex.scala 35:29]
    when _T : @[Ex.scala 35:29]
      io.writeRfOp.data <= aluRes @[Ex.scala 37:32]
      io.writeRfOp.en <= UInt<1>("h1") @[Ex.scala 38:32]
      io.writeRfOp.addr <= io.exInfo.rd @[Ex.scala 39:32]
    io.exForwarding.data <= aluRes @[Ex.scala 43:28]
    io.exForwarding.addr <= io.exInfo.rd @[Ex.scala 44:28]

